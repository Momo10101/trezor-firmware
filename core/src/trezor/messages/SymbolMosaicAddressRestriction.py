# Automatically generated by pb2py
# fmt: off
# isort:skip_file
import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class SymbolMosaicAddressRestriction(p.MessageType):

    def __init__(
        self,
        *,
        mosaic_id: Optional[int] = None,
        restriction_key: Optional[int] = None,
        previous_restriction_value: Optional[int] = None,
        new_restriction_value: Optional[int] = None,
        target_address: Optional[str] = None,
    ) -> None:
        self.mosaic_id = mosaic_id
        self.restriction_key = restriction_key
        self.previous_restriction_value = previous_restriction_value
        self.new_restriction_value = new_restriction_value
        self.target_address = target_address

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('mosaic_id', p.UVarintType, None),
            2: ('restriction_key', p.UVarintType, None),
            3: ('previous_restriction_value', p.UVarintType, None),
            4: ('new_restriction_value', p.UVarintType, None),
            5: ('target_address', p.UnicodeType, None),
        }
