# Automatically generated by pb2py
# fmt: off
# isort:skip_file
import protobuf as p

from .SymbolCosignature import SymbolCosignature
from .SymbolHeader import SymbolHeader
from .SymbolSingleTransaction import SymbolSingleTransaction

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class SymbolAggregateTransaction(p.MessageType):

    def __init__(
        self,
        *,
        transactions: Optional[List[SymbolSingleTransaction]] = None,
        cosignatures: Optional[List[SymbolCosignature]] = None,
        header: Optional[SymbolHeader] = None,
        transactions_hash: Optional[str] = None,
    ) -> None:
        self.transactions = transactions if transactions is not None else []
        self.cosignatures = cosignatures if cosignatures is not None else []
        self.header = header
        self.transactions_hash = transactions_hash

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('header', SymbolHeader, None),
            2: ('transactions_hash', p.UnicodeType, None),
            3: ('transactions', SymbolSingleTransaction, p.FLAG_REPEATED),
            4: ('cosignatures', SymbolCosignature, p.FLAG_REPEATED),
        }
