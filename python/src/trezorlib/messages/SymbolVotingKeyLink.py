# Automatically generated by pb2py
# fmt: off
# isort:skip_file
from .. import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class SymbolVotingKeyLink(p.MessageType):

    def __init__(
        self,
        *,
        public_key: Optional[str] = None,
        start_point: Optional[int] = None,
        end_point: Optional[int] = None,
        action: Optional[int] = None,
    ) -> None:
        self.public_key = public_key
        self.start_point = start_point
        self.end_point = end_point
        self.action = action

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('public_key', p.UnicodeType, None),
            2: ('start_point', p.UVarintType, None),
            3: ('end_point', p.UVarintType, None),
            4: ('action', p.UVarintType, None),
        }
