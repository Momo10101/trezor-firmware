# Automatically generated by pb2py
# fmt: off
# isort:skip_file
from .. import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class SymbolAccountMosaicRestriction(p.MessageType):

    def __init__(
        self,
        *,
        additions: Optional[List[int]] = None,
        deletions: Optional[List[int]] = None,
        type: Optional[int] = None,
    ) -> None:
        self.additions = additions if additions is not None else []
        self.deletions = deletions if deletions is not None else []
        self.type = type

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('type', p.UVarintType, None),
            2: ('additions', p.UVarintType, p.FLAG_REPEATED),
            3: ('deletions', p.UVarintType, p.FLAG_REPEATED),
        }
