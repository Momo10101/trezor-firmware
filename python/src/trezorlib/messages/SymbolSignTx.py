# Automatically generated by pb2py
# fmt: off
# isort:skip_file
from .. import protobuf as p

from .SymbolAddressAlias import SymbolAddressAlias
from .SymbolMosaicDefinition import SymbolMosaicDefinition
from .SymbolMosaicSupplyChange import SymbolMosaicSupplyChange
from .SymbolNamespaceRegistration import SymbolNamespaceRegistration
from .SymbolTransactionCommon import SymbolTransactionCommon
from .SymbolTransfer import SymbolTransfer

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class SymbolSignTx(p.MessageType):
    MESSAGE_WIRE_TYPE = 90

    def __init__(
        self,
        *,
        transaction: Optional[SymbolTransactionCommon] = None,
        transfer: Optional[SymbolTransfer] = None,
        mosaic_definition: Optional[SymbolMosaicDefinition] = None,
        mosaic_supply_change: Optional[SymbolMosaicSupplyChange] = None,
        namespace_registration: Optional[SymbolNamespaceRegistration] = None,
        address_alias: Optional[SymbolAddressAlias] = None,
    ) -> None:
        self.transaction = transaction
        self.transfer = transfer
        self.mosaic_definition = mosaic_definition
        self.mosaic_supply_change = mosaic_supply_change
        self.namespace_registration = namespace_registration
        self.address_alias = address_alias

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('transaction', SymbolTransactionCommon, None),
            2: ('transfer', SymbolTransfer, None),
            3: ('mosaic_definition', SymbolMosaicDefinition, None),
            4: ('mosaic_supply_change', SymbolMosaicSupplyChange, None),
            5: ('namespace_registration', SymbolNamespaceRegistration, None),
            6: ('address_alias', SymbolAddressAlias, None),
        }
